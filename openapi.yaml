openapi: 3.0.0
info:
  title: proyek_pos
  version: 1.0.0
servers:
  - url: https://pos-ochre.vercel.app
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: products
  - name: auth
  - name: categories
  - name: transactions
  - name: transaction_items
paths:
  /api/products:
    post:
      tags:
        - products
      summary: post products
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Caramel Macchiato
                description: >-
                  Minuman kopi khas Italia yang terbuat dari espresso, susu
                  kukus, sirup vanila, dan saus karamel
                price: '28000'
                stock: 71
                category: 2625a2c3-bca0-487a-950f-ea9939c972f1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - products
      summary: get products
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/products/{id}:
    get:
      tags:
        - products
      summary: get products by id
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - products
      summary: put products
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Biskuit Gandum
                description: Biskuit yang dibuat dengan gandum utuh
                price: '8000'
                stock: 20
                category: 6e350341-97a9-43b3-a14b-8061e8ad5c2b
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - products
      summary: delete products
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/auth/login:
    post:
      tags:
        - auth
      summary: login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: user@example.com
                password: '123456'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/auth/register:
    post:
      tags:
        - auth
      summary: register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: user
                email: user@example.com
                password: '123456'
                phone_number: '689876543211'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/categories:
    get:
      tags:
        - categories
      summary: get categories
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - categories
      summary: post categories
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Bakery
                description: Kategori untuk Bakery
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/categories/{id}:
    get:
      tags:
        - categories
      summary: get categories by id
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - categories
      summary: put categories
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Juice
                description: Kategori untuk Minuman Jus
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - categories
      summary: delete categories
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/transactions:
    get:
      tags:
        - transactions
      summary: get transactions
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - transactions
      summary: post transactions
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                payment_method: cash
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/transactions/{id}:
    get:
      tags:
        - transactions
      summary: get transactions by id
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - transactions
      summary: put transactions
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                total_amount: '56000'
                payment_method: cash
                transaction_date: '2024-12-16T02:58:42.759Z'
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - transactions
      summary: delete transactions
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/transaction-items/{transaction_id}:
    get:
      tags:
        - transaction_items
      summary: get transaction_items by id transactions
      security:
        - bearerAuth: []
      parameters:
        - name: transaction_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/transaction-items:
    post:
      tags:
        - transaction_items
      summary: post transaction_items
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                transaction_id: 9067beae-a106-471c-97e5-2d472f834977
                product_id: a64b3999-e5eb-4668-b857-bf75c45d52cd
                quantity: 2
                unit_price: '28000'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/transaction-items/item/{id}:
    get:
      tags:
        - transaction_items
      summary: get transactions_item by id
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}